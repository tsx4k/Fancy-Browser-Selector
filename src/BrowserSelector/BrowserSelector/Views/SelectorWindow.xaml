<!--
MIT Creator Revision License v1.0 (MITCRL1.0)

Copyright (c) 2023 Tomasz Szynkar (tsx4k [TSX], tszynkar@tlen.pl, https://github.com/tsx4k)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute copies of the Software
and to permit persons to whom the Software is furnished to do so, 
subject to the following conditions:

1. The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
2. There are no permissions, and/or no rights to fork, make similar Software,
sublicense, and/or sell copies of the Software, and/or any part of it.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.  
-->
<ui:FluentWindow x:Class="BrowserSelector.Views.SelectorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BrowserSelector"
        xmlns:views="clr-namespace:BrowserSelector.Views"
        xmlns:vm="clr-namespace:BrowserSelector.ViewModels"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:SelectorWindowViewModel,
                                     IsDesignTimeCreatable=True}"
        ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
        ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
        ExtendsContentIntoTitleBar="True"
        WindowBackdropType="Mica"
        WindowCornerPreference="Default"
        Title="{Binding Title, Mode=OneWay}"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterScreen"
        SnapsToDevicePixels="True"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        Topmost="True"
        Height="350" Width="500" MinHeight="350" MinWidth="500" MaxHeight="800" MaxWidth="800"
        MouseDown="UiWindow_MouseDown"   
        Activated="UiWindow_Activated"
        KeyUp="UiWindow_KeyUp"
             >
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <SolidColorBrush x:Key="SystemAccentColorSecondaryBrush" Color="{DynamicResource SystemAccentColorSecondary}" />
    </Window.Resources>
    <Grid>
        <DockPanel LastChildFill="True" Margin="20">
            <StackPanel DockPanel.Dock="Top" Orientation="Vertical">
                <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,20">
                    <Image Source="\Resources\Logo.png" VerticalAlignment="Center" Width="40" Height="40" RenderOptions.BitmapScalingMode="Fant" />
                    <TextBlock Text="{Binding Title}" VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Margin="20,0,0,0"></TextBlock>
                </DockPanel>
                <DockPanel LastChildFill="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid Margin="0,0,0,2">
                            <TextBlock Text="REQUESTED NAVIGATION TO:" FontSize="10" Foreground="{DynamicResource TextFillColorSecondaryBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" ToolTip="{Binding OriginalURL}" Visibility="{Binding UrlIsStripped, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Margin="0" Padding="0" Foreground="{DynamicResource SystemAccentColorSecondaryBrush}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <Hyperlink local:HyperlinkExtension.IsExternal="false" Command="{Binding DataContext.SafelinkStrippedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}" TextDecorations="None" Background="#01000000">
                                            <ui:SymbolIcon Symbol="Warning24" Margin="0,0,0,0" />
                                            <TextBlock Margin="0,-4,0,0" Padding="0" Text="STRIPPED FROM SAFELINK" FontSize="10">
                                            </TextBlock>
                                                <Hyperlink.Style>
                                                    <Style TargetType="Hyperlink">
                                                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorSecondaryBrush}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Hyperlink.Style>
                                            
                                        </Hyperlink>
                                    </TextBlock>

                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Margin="16,0,0,0" HorizontalAlignment="Right" ToolTip="{Binding UrlTrackersInfo}" Visibility="{Binding UrlHasTrackersFound, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Margin="0" Padding="0" Foreground="{DynamicResource SystemAccentColorSecondaryBrush}" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <Hyperlink local:HyperlinkExtension.IsExternal="false" Command="{Binding DataContext.TrackersFoundCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}" TextDecorations="None" Background="#01000000">
                                            <ui:SymbolIcon Symbol="InprivateAccount24" Margin="0,0,0,0" />
                                            <TextBlock Margin="-2,-4,0,0" FontWeight="Bold" Text="{Binding UrlTrackersFound}" FontSize="11" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                            <TextBlock Margin="0,-4,0,0" Text="TRACKER" FontSize="10" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                            <TextBlock Margin="0,-4,0,0" Visibility="{Binding UrlHasTrackersRemoved, Converter={StaticResource BooleanToVisibilityConverter}}" Text="REMOVED" FontSize="10" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                            <TextBlock Margin="0,-4,0,0" Visibility="{Binding UrlHasTrackersRemoved, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter='!'}" Text="FOUND" FontSize="10" HorizontalAlignment="Right" VerticalAlignment="Top" />
                                                <Hyperlink.Style>
                                                    <Style TargetType="Hyperlink">
                                                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource SystemAccentColorSecondaryBrush}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Hyperlink.Style>
                                            
                                        </Hyperlink>
                                    </TextBlock>



                                </StackPanel>
                            </StackPanel>
                        </Grid>
                        <TextBox Text="{Binding URL, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Stretch">
                            <TextBox.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <TextBox Grid.Column="0" Margin="0,0,0,3" Text="{Binding URL, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Stretch" Foreground="{DynamicResource TextFillColorPrimaryBrush}" />
                                        <ui:Button Appearance="Primary" Background="{DynamicResource SystemAccentColorSecondaryBrush}" Command="{Binding CopyToClipboardCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" ToolTip="Copy to Clipboard" Cursor="Hand" HorizontalAlignment="Right" VerticalAlignment="Top" Focusable="False" Grid.Column="1" Margin="3,0,0,0" Height="35" Icon="Clipboard32" Foreground="{DynamicResource TextFillColorDisabledBrush}" />
                                    </Grid>
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                    </StackPanel>
                </DockPanel>
            </StackPanel>
            <DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,15,0,0">
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                    <ui:Button IconFilled="True" BorderBrush="{DynamicResource SystemAccentColorSecondaryBrush}" IconForeground="{DynamicResource SystemAccentColorSecondaryBrush}" Command="{Binding OpenBrowserCommand}" CommandParameter="{x:Null}" ToolTip="Open link in selected browser (Enter or Mouse double click on list item)" Cursor="Hand" FontSize="20" Padding="30,0,30,0" Height="44" IsEnabled="True" Icon="Open24">
                    </ui:Button>
                    <ui:ToggleSwitch Margin="20,0" Content="Remember my choice" Visibility="{Binding CanRememberChoice, Converter={StaticResource BooleanToVisibilityConverter}}" IsChecked="{Binding RememberChoice}" ToolTip="{Binding ChoiceInfo}" Style="{StaticResource HintableUiToggleSwitchStyle}" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" VerticalAlignment="Bottom">
                    <TextBlock HorizontalAlignment="Right" ToolTip="Buy me a Coffee ☕">
                            <Hyperlink local:HyperlinkExtension.IsExternal="true" NavigateUri="{Binding DataContext.SupportUrl, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" TextDecorations="None">
                                <TextBlock FontSize="12" Text="{Binding DataContext.About, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                </TextBlock>
                            </Hyperlink>
                        </TextBlock>
                    <TextBlock HorizontalAlignment="Right" ToolTip="https://github.com/tsx4k/Fancy-Browser-Selector">
                            <Hyperlink local:HyperlinkExtension.IsExternal="true" NavigateUri="{Binding DataContext.AboutUrl, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" TextDecorations="None">
                                <TextBlock FontSize="10" Text="{Binding DataContext.Version, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                                </TextBlock>
                            </Hyperlink>
                        </TextBlock>

                </StackPanel>
            </DockPanel>
            <StackPanel>
                <TextBlock Text="SELECT BROWSER:" FontSize="10" Margin="0,2,0,2" Foreground="{DynamicResource TextFillColorSecondaryBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" />

                <ListBox VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" x:Name="lbBrowsers" ItemsSource="{Binding Browsers, Mode=OneWay}" Cursor="Hand" MouseDoubleClick="ListBox_MouseDoubleClick" MouseLeftButtonUp="ListBox_MouseLeftButtonUp">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="44" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.Column="0" VerticalAlignment="Center" Width="36" Height="36" HorizontalAlignment="Center">
                                    <Image Source="{Binding Icon}" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="Fant" />
                                </DockPanel>
                                <TextBlock Grid.Column="1" Margin="10,0,10,0" Text="{Binding Name, Mode=OneWay}" FontSize="16" FontWeight="Medium" VerticalAlignment="Center" />
                                <TextBlock Grid.Column="2" DockPanel.Dock="Right" Margin="10,0,10,0" Text="{Binding Comment, Mode=OneWay}" FontSize="12" TextWrapping="WrapWithOverflow" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Right" TextAlignment="Right" Opacity="0.6" />
                                <ui:Button Grid.Column="3" ToolTip="Edit Comment" Cursor="Hand" Command="{Binding DataContext.EditCommentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding}" Icon="Edit32" IconFilled="True" HorizontalAlignment="Right" Width="40" Height="40">
                                    <ui:Button.Style>
                                        <Style TargetType="ui:Button" BasedOn="{StaticResource DefaultUiButtonStyle}">
                                            <Setter Property="Opacity" Value="1.0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="False">
                                                    <Setter Property="Opacity" Value="0.2" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ui:Button.Style>
                                </ui:Button>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </DockPanel>
        <ui:TitleBar
            ShowMaximize="False"
            ShowMinimize="False"
            CanMaximize="False"
            ShowHelp="True"
            HelpClicked="TitleBar_SettingsClicked"
            >
        </ui:TitleBar>
    </Grid>
</ui:FluentWindow>
